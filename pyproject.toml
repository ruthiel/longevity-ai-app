[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "longevity-ai"
version = "0.1.0"
description = "AI-Powered Longevity Knowledge Assistant - Production Application"
authors = [{name = "Ruthiel Trevisan", email = "ruthiel@trevisan.club"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
keywords = ["ai", "longevity", "health", "rag", "openai", "supabase"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Web Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    
    # AI/ML Libraries
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-community>=0.0.10",
    "openai>=1.6.0",
    
    # Database
    "supabase>=2.0.0",
    
    # Data Validation & Settings
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Environment & Configuration
    "python-dotenv>=1.0.0",
    
    # HTTP Client
    "httpx>=0.25.0",
    "requests>=2.31.0",
    
    # Utilities
    "tenacity>=8.2.0",
    "python-multipart>=0.0.6",
    
    # Logging
    "structlog>=23.2.0",
    
    # CLI
    "click>=8.1.0",
    "rich>=13.7.0",  # For beautiful CLI output
    
    # Text Processing
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.25.0",  # For testing FastAPI
    
    # Code Quality
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    
    # Development Tools
    "jupyter>=1.0.0",
    "ipython>=8.18.0",
]

all = [
    "longevity-ai[dev]",
]

[project.scripts]
longevity-ai = "longevity_ai.cli.main:main"

[project.urls]
Homepage = "https://github.com/ruthiel/longevity-ai-app"
Documentation = "https://github.com/ruthiel/longevity-ai-app/docs"
Repository = "https://github.com/ruthiel/longevity-ai-app"
"Bug Tracker" = "https://github.com/ruthiel/longevity-ai-app/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["longevity_ai*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=longevity_ai --cov-report=html --cov-report=term-missing --cov-fail-under=80"
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "supabase.*",
    "langchain.*",
    "openai.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["longevity_ai"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]